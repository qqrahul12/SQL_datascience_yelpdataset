Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000     **select count(*) from attribute
ii. Business table = 10000     **select count(*) from business
iii. Category table = 10000    **select count(*) from category
iv. Checkin table = 10000      **select count(*) from checkin
v. elite_years table = 10000   **select count(*) from elite_years
vi. friend table = 10000       ** select count(*) from friend
vii. hours table = 10000       **select count(*) from hours
viii. photo table = 10000      **select count(*) from photo
ix. review table = 10000       **select count(*) from review
x. tip table = 10000           **select count(*) from tip
xi. user table = 10000         **select count(*) from user
	
2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000                 **select count(distinct(id)) from business    
ii. Hours = 1562              **select count(distinct(business_id)) from hours
iii. Category = 2643              **select count(distinct(business_id)) from category
iv. Attribute = 1115              **select count(distinct(business_id)) from attribute
v. Review = 10000              **select count(distinct(id)) from review
vi. Checkin = 493            **select count(distinct(business_id)) from checkin
vii. Photo =10000              **select count(distinct(id)) from photo
viii. Tip = 537    #user_id             **select count(distinct(user_id)) from tip
ix. User = 10000              **select count(distinct(id)) from user
x. Friend = 11             **select count(distinct(user_id)) from friend
xi.Elite_years= 2780           **select count(distinct(user_id)) from elite_years


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	SQL code used to arrive at answer:
    SELECT COUNT(1)
		FROM user
		WHERE id is NULL or 
		  name is NULL or 
		  review_count is NULL or 
		  yelping_since is NULL or
		  useful is NULL or 
		  funny is NULL or 
		  cool is NULL or 
		  fans is NULL or 
		  average_stars is NULL or 
		  compliment_hot is NULL or 
		  compliment_more is NULL or 
		  compliment_profile is NULL or 
		  compliment_cute is NULL or 
		  compliment_list is NULL or 
		  compliment_note is NULL or 
		  compliment_plain is NULL or 
		  compliment_cool is NULL or 
		  compliment_funny is NULL or 
		  compliment_writer is NULL or 
		  compliment_photos is NULL 

4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

    i. Table: Review, Column: Stars
        ** select min(Stars),max(Stars),avg(Stars) from Review
		min: 1	max: 5	avg: 3.7082
			
	ii. Table: Business, Column: Stars
        ** select min(Stars),max(Stars),avg(Stars) from Business
		min: 1.0		max: 5.0	avg: 3.6549
			
	iii. Table: Tip, Column: Likes
        ** select min(Likes),max(Likes),avg(Likes) from tip
		min: 0	    max: 2		avg: 0.0144
			
	iv. Table: Checkin, Column: Count
        ** select min(count),max(count),avg(count) from checkin
		min: 1		max: 53		avg: 1.9414
			
	v. Table: User, Column: Review_count
        ** select min(review_count),max(review_count),avg(review_count) from user
		min: 0	max: 2000		avg: 24.2995
		
5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	**select city,sum(review_count) as total_reviews from business group by city order by total_reviews desc

	Copy and Paste the Result Below:
    +-----------------+---------------+
    | city            | total_reviews |
    +-----------------+---------------+
    | Las Vegas       |         82854 |
    | Phoenix         |         34503 |
    | Toronto         |         24113 |
    | Scottsdale      |         20614 |
    | Charlotte       |         12523 |
    | Henderson       |         10871 |
    | Tempe           |         10504 |
    | Pittsburgh      |          9798 |
    | MontrÃ©al        |          9448 |
    | Chandler        |          8112 |
    | Mesa            |          6875 |
    | Gilbert         |          6380 |
    | Cleveland       |          5593 |
    | Madison         |          5265 |
    | Glendale        |          4406 |
    | Mississauga     |          3814 |
    | Edinburgh       |          2792 |
    | Peoria          |          2624 |
    | North Las Vegas |          2438 |
    | Markham         |          2352 |
    | Champaign       |          2029 |
    | Stuttgart       |          1849 |
    | Surprise        |          1520 |
    | Lakewood        |          1465 |
    | Goodyear        |          1155 |
    +-----------------+---------------+
		
6. Find the distribution of star ratings to the business in the following cities:

    i. Avon

    SQL code used to arrive at answer:
    ** select stars,count(review_count) from business where city == 'Avon' group by Stars

Copy and Paste the Resulting Table Below (2 columns Ã¢â‚¬â€œ star rating and count):
+-------+---------------------+
| stars | count(review_count) |
+-------+---------------------+
|   1.5 |                   1 |
|   2.5 |                   2 |
|   3.5 |                   3 |
|   4.0 |                   2 |
|   4.5 |                   1 |
|   5.0 |                   1 |
+-------+---------------------+

    ii. Beachwood

    SQL code used to arrive at answer:
    ** select stars,count(review_count) from business where city == 'Beachwood' group by Stars

Copy and Paste the Resulting Table Below (2 columns Ã¢â‚¬â€œ star rating and count):
+-------+---------------------+
| stars | count(review_count) |
+-------+---------------------+
|   2.0 |                   1 |
|   2.5 |                   1 |
|   3.0 |                   2 |
|   3.5 |                   2 |
|   4.0 |                   1 |
|   4.5 |                   2 |
|   5.0 |                   5 |
+-------+---------------------+	


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	**select id,name,review_count from user order by review_count desc limit 3
		
	Copy and Paste the Result Below:
        +------------------------+--------+--------------+
        | id                     | name   | review_count |
        +------------------------+--------+--------------+
        | -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
        | -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
        | -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
        +------------------------+--------+--------------+		

8. Does posing more reviews correlate with more fans?

    Ans = "No"

	Please explain your findings and interpretation of the results:
    ** select id,name,review_count,fans as effect from user order by fans desc
	**select min(fans/review_count), max(fans/review_count), avg(fans/review_count)  from user

        +------------------------+-----------+--------------+--------+
        | id                     | name      | review_count | effect |
        +------------------------+-----------+--------------+--------+
        | -9I98YbNQnLdAmcYfb324Q | Amy       |          609 |    503 |
        | -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |    497 |
        | --2vR0DIsmQ6WfcSzKWigw | Harald    |         1153 |    311 |
        | -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |    253 |
        | -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |    173 |
        | -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |    159 |
        | -9bbDysuiWeo2VShFJJtcw | Cat       |          377 |    133 |
        | -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |    126 |
        | -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |    124 |
        | -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |    120 |
        | -B-QEUESGWHPE_889WJaeg | Mark      |          861 |    115 |
        | -DmqnhW4Omr3YhmnigaqHg | Tiffany   |          408 |    111 |
        | -cv9PPT7IHux7XUc9dOpkg | bernice   |          255 |    105 |
        | -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |    104 |
        | -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |    101 |
        | -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |    101 |
        | -4viTt9UC44lWCFJwleMNQ | Ben       |          307 |     96 |
        | -3i9bhfvrM3F1wsC9XIB8g | Linda     |          584 |     89 |
        | -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |     85 |
        | -ePh4Prox7ZXnEBNGKyUEA | Jessica   |          220 |     84 |
        | -4BEUkLvHQntN6qPfKJP2w | Greg      |          408 |     81 |
        | -C-l8EHSLXtZZVfUAUhsPA | Nieves    |          178 |     80 |
        | -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |     78 |
        | -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |     76 |
        | -0zEEaDFIjABtPQni0XlHA | Nicole    |          161 |     73 |
        +------------------------+-----------+--------------+--------+
        +------------------------+------------------------+------------------------+
        | min(fans/review_count) | max(fans/review_count) | avg(fans/review_count) |
        +------------------------+------------------------+------------------------+
        |                      0 |                     11 |       0.00820738664798 |
        +------------------------+------------------------+------------------------+
	In the table1 it seems like there is no relation with fans and review_count.
    In the table2 we can see that avg effect of fans/review_count is very low.

    So we can conclude that there is no direct relation between fans and Review_count.

9. Are there more reviews with the word "love" or with the word "hate" in them?
	Answer: Love
	
	SQL code used to arrive at answer:
    **select count(id) from review where text like '%love%' ->1780
	**select count(id) from review where text like '%hate%' ->232
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	** select id,name,fans from user order by fans desc limit 10
	
	Copy and Paste the Result Below:
        +------------------------+-----------+------+
        | id                     | name      | fans |
        +------------------------+-----------+------+
        | -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
        | -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
        | --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
        | -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
        | -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
        | -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
        | -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
        | -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
        | -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
        | -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
        +------------------------+-----------+------+
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating.
  Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
    +------------------------+-------+-----------------------------+-------+-----------+----------+----------------------+--------------+-----------------------------+-------------+
    | id                     | total | name                        | stars | city      | category | hours                | review_count | address                     | postal_code |
    +------------------------+-------+-----------------------------+-------+-----------+----------+----------------------+--------------+-----------------------------+-------------+
    | 1q44aWEcDN7uRvA2l8xpvQ |     7 | Walgreens                   |   2.5 | Las Vegas | Food     | Saturday|8:00-22:00  |            6 | 3808 E Tropicana Ave        | 89121       |
    | 0aKsGxx7XP2TMs_fn_9xVw |     6 | Sweet Ruby Jane Confections |   4.0 | Las Vegas | Food     | Saturday|10:00-19:00 |           30 | 8975 S Eastern Ave, Ste 3-B | 89123       |
    +------------------------+-------+-----------------------------+-------+-----------+----------+----------------------+--------------+-----------------------------+-------------+
    i. Do the two groups you chose to analyze have a different distribution of hours?
    Yes, the business having 2.5 stars works 14 hours while the business having 4.0 stars works only 9 hours on saturday.

    ii. Do the two groups you chose to analyze have a different number of reviews?
    Yes, the business having 2.5 stars only has 6 reviews while the business having 4.0 stars has 30 reviews.
         
    iii. Are you able to infer anything from the location data provided between these two groups? Explain.
    yes,the business having 2.5 stars is located at 89121 postal code while the business having 4.0 stars is lacated at 89123 postal code.

SQL code used for analysis:
    **select  b.id ,count(category) as total, b.name,stars,city,category,hours,review_count,address,postal_code
    **from (business as b inner join category as c on b.id = c.business_id)
    **inner join hours as h on h.business_id = b.id
    **where city = 'Las Vegas' and category = 'Food'
    **group by stars,category
		
2. Group business based on the ones that are open and the ones that are closed.
 What differences can you find between the ones that are still open and the ones that are closed?
 List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Open businesses are having avg. review_count of 31.75 and max review_count of 3873,
                    while closed businesses are having avg. reviews of 23.18 and max review_count only 700.
         
ii. Difference 2: Open business are having avg stars of 3.67 while closed businesses are having stars of 3.50.
                        
    SQL code used for analysis:
    **select count(id),avg(review_count),max(review_count),avg(stars),max(stars) from business group by is_open
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp
  dataset and are going to prepare the data for analysis.

    Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses
    to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number 
    of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and 
    come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
I wish to predict if the business will stay open or it will be closed.
                 
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
I will need the stars of business with review_count and
the type of review and the location of business.  

reviews and stars plays an important role in getting the
current situation of a business.the city and area also plays an
important role.

iii. Output of your finished dataset:
    +------------------------+-----------------+---------------+---------------------+---------------+-------------+--------------+------------+-------------+
    | id                     | business_rating | review_rating | sum(b.review_count) | sum(r.useful) | sum(r.cool) | sum(r.funny) | city       | postal_code |
    +------------------------+-----------------+---------------+---------------------+---------------+-------------+--------------+------------+-------------+
    | --9e1ONYQuAa-CB_Rrw7Tw |             4.0 |          4.25 |                5556 |            15 |           7 |            5 | Las Vegas  | 89109       |
    | --cZ6Hhc9F7VkKXxHMVZSQ |             4.0 |           3.0 |                 598 |             1 |           0 |            0 | Charlotte  | 28203       |
    | -050d_XIor1NpCuWkbIVaQ |             4.0 |           5.0 |                 700 |             1 |           0 |            0 | Phoenix    | 85004       |
    | -0NrB58jqKqJfuUCDupcsw |             3.5 |           1.0 |                  76 |             1 |           0 |            0 | North York | M2N 5N2     |
    | -0tgMGl7D9B10YjSN2ujLA |             3.5 |           2.0 |                 224 |             2 |           3 |            2 | Phoenix    | 85032       |
    | -1UMR00eXtwaeh59pEiDjA |             3.5 |           2.0 |                 279 |             0 |           0 |            0 | Phoenix    | 85034       |
    | -1xuC540Nycht_iWFeJ-dw |             4.5 |           3.0 |                 398 |             0 |           0 |            0 | MontrÃ©al   | H2W 1C8     |
    | -2TKoFglMQvSmHSNWf6S8Q |             4.0 |           3.0 |                   8 |             0 |           0 |            0 | Scottsdale | 85258       |
    | -2uhc4spgMqJMy0YSxConA |             4.0 |           5.0 |                  18 |             0 |           0 |            0 | Mesa       | 85212       |
    | -38Kck4mGlkBwd6OXayZRg |             5.0 |           5.0 |                  32 |             0 |           0 |            0 | Las Vegas  | 89128       |
    | -3QHAylnVB-vNmCg2Rf5aw |             5.0 |           5.0 |                  19 |             1 |           0 |            0 | Middleton  | 53562       |
    | -3zffZUHoY8bQjGfPSoBKQ |             4.0 |           4.5 |                1148 |             1 |           0 |            0 | Las Vegas  | 89109       |
    | -5L8zOxibac-vBrsYtxXbQ |             3.5 |           5.0 |                  95 |             0 |           0 |            0 | Charlotte  | 28203       |
    | -5NXoZeGBdx3Bdk70tuyCw |             4.0 |           5.0 |                  54 |             1 |           0 |            0 | Urbana     | 61801       |
    | -5TBEK1ddM41v_gqGm5oyw |             5.0 |           5.0 |                   7 |             2 |           0 |            0 | Toronto    | M4S 1Y5     |
    | -6tvduBzjLI1ISfs3F_qTg |             4.0 |           4.0 |                 902 |             0 |           0 |            0 | Gilbert    | 85234       |
    | -7H-oXvCxJzuT42ky6Db0g |             3.5 |           3.0 |                 872 |             0 |           0 |            0 | Pittsburgh | 15201       |
    | -7PX_FOoCwktlunImRyZdg |             4.0 |           5.0 |                  93 |             0 |           0 |            0 | Pittsburgh | 15206       |
    | -82Z0wTA-nOCLUVD4XXIBA |             3.0 |           1.0 |                  29 |             0 |           0 |            0 | Tempe      | 85284       |
    | -8O8sVCnaIKHP-596zN9UA |             3.5 |           1.0 |                 148 |             5 |           0 |            1 | Twinsburg  | 44087       |
    | -8QlV3b_9H4BAh6LgMIr1g |             4.5 |           5.0 |                 406 |             1 |           1 |            0 | Tempe      | 85282       |
    | -8ZiMXZReeTD3kwEvS0Lww |             4.5 |           5.0 |                 106 |             0 |           0 |            0 | Las Vegas  | 89149       |
    | -92cC6-X87HQ1DE1UHOx3w |             3.5 |           1.0 |                  53 |             2 |           0 |            2 | MontrÃ©al   | H3J 1M8     |
    | -95mbLJsa0CxXhpaNL4LvA |             3.5 |           5.0 |                 564 |             2 |           3 |            1 | Las Vegas  | 89139       |
    | -9YyInW1wapzdNZrhQJ9dg |             2.5 |           3.5 |                 320 |             0 |           0 |            0 | Las Vegas  | 89109       |
    +------------------------+-----------------+---------------+---------------------+---------------+-------------+--------------+------------+-------------+
    (Output limit exceeded, 25 of 507 total rows shown)         
         
iv. Provide the SQL code you used to create your final dataset:
    **select  b.id ,avg(b.stars) as business_rating,
    **avg(r.stars) as review_rating,sum(b.review_count),sum(r.useful),sum(r.cool),
    **sum(r.funny),city,postal_code
    **from business as b inner join review as r on b.id= r.business_id
    **group by b.id